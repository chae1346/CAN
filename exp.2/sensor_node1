// send data01(0x01)
// recieve sensor data buf(0x03)
// alarm

#include <df_can.h>
#include <SPI.h>
#include "DHT.h"
#define DHTPIN 3
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);  
const int SPI_CS_PIN = 10;  
MCPCAN CAN(SPI_CS_PIN); 

unsigned char len = 0;
unsigned char id = 0;
unsigned char buf[8];
unsigned char data01[8] = {'0','2','4','6','8','a','c','e'};
unsigned char data02[8] = {'1','3','5','7','9','b','d','f'};

void setup() {
  Serial.begin(9600); 
  int count = 50;
  do {
    CAN.init();     
    if(CAN_OK == CAN.begin(CAN_200KBPS)) {  
      Serial.println("CAN BUS Shield init ok!");
      break;
    }
    else {
      delay(100);
      if (count == 0)
        Serial.println("CAN BUS Shield init failed");
    }
  }while(count--);

  attachInterrupt(0, MCP2515_ISR, FALLING);
  dht.begin();  
}

void MCP2515_ISR() {
  len = 0;
  for (int i=0; i<8; i++) {  
    buf[i] = 0;
  }
  while (CAN_MSGAVAIL == CAN.checkReceive()) {
    CAN.readMsgBuf(&len, buf);
    id = CAN.getCanId();
      
    if (id == 0x03) {      
      Serial.print("\nID : ");  Serial.println(id);

      Serial.print("Temperature : ");
      Serial.print(buf[0]); Serial.println("°C");
      if (buf[0] >= 26)
        Serial.println("온도가 높습니다.");

      Serial.print("Humidity : ");
      Serial.print(buf[1]); Serial.println("%");
      if (buf[1] >= 34)
        Serial.println("습도가 높습니다.");
    }
  }
}

void loop() {  
  CAN.sendMsgBuf(0x01, 0, 8, data01);
  delay(2000);
}
