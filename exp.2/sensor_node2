// send sensor data buf(0x03)
// recieve data01(0x01)
// temp & humid

#include <df_can.h>
#include <SPI.h>
#include "DHT.h"
#define DHTPIN 3
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE);  
const int SPI_CS_PIN = 10;  
MCPCAN CAN(SPI_CS_PIN); 

unsigned char len = 0;
unsigned char id = 0;
unsigned char buf[8];
unsigned char data01[8] = {'0','2','4','6','8','a','c','e'};
unsigned char data02[8] = {'1','3','5','7','9','b','d','f'};

void setup() {
  Serial.begin(9600); 
  int count = 50;
  do {
    CAN.init();     
    if(CAN_OK == CAN.begin(CAN_200KBPS)) {  
      Serial.println("CAN BUS Shield init ok!");
      break;
    }
    else {
      delay(100);
      if (count == 0)
        Serial.println("CAN BUS Shield init failed");
    }
  }while(count--);

  attachInterrupt(0, MCP2515_ISR, FALLING);
  dht.begin();  
}

void MCP2515_ISR() {   
  len = 0;
  for (int i=0; i<8; i++) { 
  buf[i] = 0;
  }
  while (CAN_MSGAVAIL == CAN.checkReceive()) {
  CAN.readMsgBuf(&len, buf);
      id = CAN.getCanId();
  
      if (id == 0x01) {
        Serial.print("ID : ");  Serial.println(id);
        Serial.print("Data : ");
        for (int i = 0; i < len; i++) {
          Serial.print(char(buf[i]));  Serial.print(" ");
        }
        Serial.println("\n");
      }
  }
}

void loop() {
  unsigned char temp = (unsigned char)dht.readTemperature();
  unsigned char humi = (unsigned char)dht.readHumidity();  
unsigned char data03[2] = {temp, humi};

  if (isnan(temp) || isnan(humi)) {
    Serial.println("Failed to read from DHT sensor.");
    return;
}

  CAN.sendMsgBuf(0x03, 0, 2, data03);
   delay(2000);
}   
